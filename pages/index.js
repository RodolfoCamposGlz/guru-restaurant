import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react'; 
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useQuery } from "@apollo/client";
import { GET_SEARCH } from '../graphql/queries';
import Card from '../components/Card/Card';
import Link from 'next/link'
import { createStore } from 'redux';
import { useSelector, useDispatch } from 'react-redux'
import { searchBussiness, viewedBusiness } from '../store/slices/businessSlice';
import ReactLoading from 'react-loading';
import Input from '../components/Input/Input';


const _LOCATION = 'leon guanajuato';
const _LIMIT = 10;

export default function Home() {
  const { search, viewed }  = useSelector(state=> state.business);
  const [searchWord, setSearchedWord] = useState(search);
  const dispatch = useDispatch();
  const didMountSearch = useRef(false);
  const { loading, error, data,} = useQuery(GET_SEARCH, {
    variables: { term: search, location:_LOCATION, limit: _LIMIT},
    fetchPolicy: 'cache',
  });

  const onSearchWord =(event) => {
        setSearchedWord(event.target.value);
  }

  useEffect(() => {
    if (didMountSearch.current) {
      const delayDebounceFn = setTimeout(() => {
        dispatch(searchBussiness(searchWord))
      }, 1000);
      return () => clearTimeout(delayDebounceFn);
    } else didMountSearch.current = true;
  }, [searchWord]);

  const onClickBusiness = (business) => {
    const obj = {}
    if(obj[business.id]) return;
    obj[business.id] = business.alias;
    dispatch(viewedBusiness(obj));
  }

  const isBusinessViewed = useCallback((id) => {
    if(viewed[id]) return true;
    return false;
  },[viewed])

  return (
    <div>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="home--container">
        <div className='home--search-input-container'>
          <h1 className='home--title'>Encuentra tu restaurante favorito!</h1>
          <Input placeholder='Escribe el nombre del restaurante' value={searchWord} onChange={onSearchWord}/>
        </div>
          {search !== '' ? (
              <div className='home--content'>
              {
                loading && !data ? (
                  <ReactLoading type={'spin'} color={'white'} height={20} width={20} />
                )
                : (
                  <ul>
                  {data?.search?.business?.map((business, index)=> {
                    return(
                      <li  key={index}>
                        <Card isViewed={() => isBusinessViewed(business.id)} onClick={() => onClickBusiness(business)} business={business} />
                      </li>
                    )
                  })}
                  </ul>
                )
              }
              </div>
          ) : (
            null
          )}
      </main>
    </div>
  )
}
